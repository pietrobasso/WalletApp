//
//  CardPresenter.swift
//  wallet
//
//  Created by Pietro Basso on 14/02/2019.
//  Copyright (c) 2019 Pietro Basso. All rights reserved.
//
//  This file was generated by the Lisca Xcode Templates so
//  you can apply lisca architecture to your iOS projects
//

import UIKit
import RxSwift
import RxCocoa

protocol CardPresenterInput {
    var state: Observable<CardState> { get }
}

class CardPresenter: CardViewControllerInput {
    
    // MARK: CardViewControllerInput
    let title: Driver<String>
    let mainEmoji: Driver<String>
    let description: Driver<String>
    let animateCard: Driver<Bool>
    let mainButtonTitle: Driver<String>
    
    init(input: CardPresenterInput) {
        title = input.state
            .map { $0.card.descriptor.title }
            .distinctUntilChanged()
            .asDriver(onErrorJustReturn: "")
        mainEmoji = input.state
            .map { _ in "âœ¨ðŸ’³âœ¨" }
            .distinctUntilChanged()
            .asDriver(onErrorJustReturn: "")
        description = input.state
            .map { $0.card.descriptor.welcomeText }
            .distinctUntilChanged()
            .asDriver(onErrorJustReturn: "")
        animateCard = input.state
            .map { $0.presenting }
            .skip(1)
            .distinctUntilChanged()
            .asDriver(onErrorJustReturn: false)
        mainButtonTitle = input.state
            .map { _ in "Done" }
            .distinctUntilChanged()
            .asDriver(onErrorJustReturn: "")
    }
}

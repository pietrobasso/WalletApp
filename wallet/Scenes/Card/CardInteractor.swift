//
//  CardInteractor.swift
//  wallet
//
//  Created by Pietro Basso on 14/02/2019.
//  Copyright (c) 2019 Pietro Basso. All rights reserved.
//
//  This file was generated by the Lisca Xcode Templates so
//  you can apply lisca architecture to your iOS projects
//

import UIKit
import RxSwift
import RxCocoa

protocol CardInteractorDelegate: class {
    func dismissAction()
}

struct CardState {
    let snapshotImage: UIImage?
    var shouldDismiss: Bool
}

class CardInteractor: CardViewControllerOutput, CardPresenterInput, RxStateful {
    
    typealias Action = CardAction
    typealias State = CardState
    typealias Dependencies = UserDefaultsServiceProvider
    
    enum Mutation {
        case dismissAnimated
    }
    
    let initialState: CardState
    let dependencies: Dependencies
    
    weak var delegate: CardInteractorDelegate?
    
    init(dependencies: Dependencies, snapshotImage: UIImage?) {
        self.dependencies = dependencies
        initialState = CardState(snapshotImage: snapshotImage, shouldDismiss: false)
    }
    
    func mutate(action: Action) -> Observable<Mutation> {
        switch action {
        case .viewLoaded:
            return .empty()
        case .presentingCompleted:
            delegate?.dismissAction()
            return .empty()
        case .dismissButtonTapped:
            return .just(.dismissAnimated)
        }
    }
    
    func reduce(state: State, mutation: Mutation) -> State {
        var copy = state
        switch mutation {
        case .dismissAnimated:
            copy.shouldDismiss = true
        }
        return copy
    }
}

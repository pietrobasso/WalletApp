//
//  HomeCoordinator.swift
//  wallet
//
//  Created by Pietro Basso on 14/02/2019.
//  Copyright (c) 2019 Pietro Basso. All rights reserved.
//
//  This file was generated by the Lisca Xcode Templates so
//  you can apply lisca architecture to your iOS projects
//

import UIKit

class HomeCoordinator: Coordinator, TabProvider, NavigationProvider {
    var childrenCoordinators: [Coordinator] = []
    let viewController: UIViewController
    let tabController: UITabBarController = HomeTabBarController()
    let navigationController: UINavigationController

    weak var delegate: CoordinatorDelegate?
    private let dependencies: AppDependencies
    private let navigationControllerDelegate = CustomNavigationControllerDelegate { (navigationController, viewController, animated) in
        navigationController.navigationBar.prefersLargeTitles = true
        if viewController is HomeTabBarController {
            navigationController.navigationBar.isHidden = true
        }
    }
    
    init(dependencies: AppDependencies, navigationController: UINavigationController? = nil) {
        self.dependencies = dependencies
        if let navigationController = navigationController {
            self.navigationController = navigationController
            viewController = tabController
        } else {
            self.navigationController = UINavigationController(rootViewController: tabController)
            viewController = self.navigationController
        }
        self.navigationController.delegate = navigationControllerDelegate
    }
    
    func start() {
        (tabController as? HomeTabBarController)?.customDelegate = self
        setupOnboarding()
        add(page: .cards)
    }
    
    private func setupOnboarding() {
        let coordinator = OnboardingCoordinator(dependencies: dependencies)
        coordinator.delegate = self
        present(child: coordinator)
    }
    
    private func add(page: TabPage) {
        let tabBarItem = UITabBarItem(title: nil, image: page.descriptor.image, selectedImage: page.descriptor.selectedImage)
        switch page {
        case .cards:
            let coordinator = CardsCoordinator(dependencies: dependencies)
            coordinator.viewController.tabBarItem = tabBarItem
            coordinator.delegate = self
            addTab(coordinator: coordinator)
            coordinator.start()
        default:
            break
        }
    }
}

extension HomeCoordinator: HomeTabBarControllerDelegate {
    func dismissAction() {
        
    }
}

// MARK: - Extension: CoordinatorDelegate
extension HomeCoordinator: CoordinatorDelegate {
    func dismiss(coordinator: Coordinator) {
        dismiss(child: coordinator)
    }
}

// MARK: - Extension: CardsCoordinatorDelegate
extension HomeCoordinator: CardsCoordinatorDelegate {
    func showAddNewCard() {
        debugPrint("should show add cards scene")
    }
}
